#include <stdexcept>

//! Структура динамического массива.
struct DynamicArray
{
private:
    //! Текущий размер массива (количество элементов).
    int _size;

    //! Вместимость массива (максимальное количество элементов, которые он может хранить).
    int _capacity;

    //! Указатель на массив целых чисел.
    int* _array;

    int _growthFactor = 2;

    //! Увеличивает размер массива, если он заполнен.
    void IncreaseSize();

    //! Уменьшает размер массива, если он не полностью заполнен.
    void ReduceSize();

    //! Возвращает следующий "разрыв" для увеличения размера массива.
    //! @param gap Текущий разрыв.
    //! @return Следующий разрыв для увеличения размера массива.
    int GetNextGap(int gap);

public:
    //! Конструктор по умолчанию, инициализирует массив.
    DynamicArray();

    //! Деструктор, освобождает память, занятую массивом.
    ~DynamicArray();

    //! Возвращает текущий размер массива.
    //! @return Текущий размер массива.
    int GetSize();

    //! Возвращает текущую вместимость массива.
    //! @return Текущая вместимость массива.
    int GetCapacity();

    //! Возвращает указатель на массив.
    //! @return Указатель на массив целых чисел.
    int* GetArray();

    //! Расширяет массив, если он переполнен.
    void IfArrayFull();

    //! Добавляет элемент в начало массива.
    //! @param value Значение элемента для добавления.
    void AddElementAtStart(int value);

    //! Добавляет элемент в конец массива.
    //! @param value Значение элемента для добавления.
    void AddElementAtEnd(int value);

    //! Добавляет элемент по заданному индексу.
    //! @param index Индекс, по которому добавляется элемент.
    //! @param value Значение элемента для добавления.
    void AddElementByIndex(int index, int value);

    //! Удаляет элемент по заданному индексу.
    //! @param index Индекс элемента для удаления.
    void RemoveByIndex(int index);

    //! Удаляет первое вхождение элемента по его значению.
    //! @param value Значение элемента для удаления.
    void RemoveByValue(int value);

    //! Получает элемент по заданному индексу.
    //! @param index Индекс элемента для получения.
    //! @return Значение элемента по заданному индексу.
    int GetElement(int index);

    //! Сортирует массив (например, с использованием сортировки вставками или быстрой сортировки).
    void SortArray();

    //! Выполняет линейный поиск элемента в массиве.
    //! @param value Значение элемента для поиска.
    //! @return Индекс найденного элемента или -1, если элемент не найден.
    int LinearSearch(int value);

    //! Выполняет бинарный поиск элемента в отсортированном массиве.
    //! @param value Значение элемента для поиска.
    //! @return Индекс найденного элемента или -1, если элемент не найден.
    int BinarySearch(int value);
};