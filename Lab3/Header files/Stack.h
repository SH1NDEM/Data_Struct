#pragma once

//! \brief СД Стек.
struct Stack
{
private:
	//! \brief Указатель на буфер для хранения элементов стека.
	int* _buffer;  

	//! \brief Текущий размер буфера (максимальное количество элементов).
	int _size;    

	//! \brief Индекс вершины стека.
	int _top;      

public:
	//! \brief Проверяет, пуст ли стек.
	//! \return true, если стек пуст, иначе false.
	bool IsEmpty();

	//! \brief Конструктор стека. Выделяет память под буфер заданного размера.
	//! \param bufferSize Размер буфера стека.
	Stack(int bufferSize);

	//! \brief Освобождает память.
	~Stack();

	//! \brief Добавляет элемент на вершину стека.
	//! \param value Значение, которое нужно добавить.  Обработайте переполнение буфера.
	void Push(int value);

	//! \brief Извлекает и возвращает элемент с вершины стека.
	//! \return Значение извлеченного элемента. Обработайте случай пустого стека.
	int Pop();

	//! \brief Изменяет размер буфера стека.
	//! \param newSize Новый размер буфера. Обработайте случай newSize <= 0, а также копирование данных при увеличении размера.
	void Resize(int newSize);
};